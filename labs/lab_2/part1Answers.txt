

1.) 

sort runtime in seconds
comparison counter for testInteger index 0
comparisons static counter for testInteger


Quicksort:
0.004925113
16
149000
0.005254987
8
161090
0.00517558
10
154819
0.008576254
11
163969
0.006593261
11
159934

Mergesort:
0.006149926
7
120465
0.006244494
9
120358
0.005834539
7
120325
0.005903758
9
120315
0.006392158
9
120354


Looks like Quicksort can run shorter but also longer than Mergesort. Mergesort also consistently makes less comparisons

2.)
QuickSort:
0.120519799
9999
49995000
0.122956841
9999
49995000
0.120303358
9999
49995000
0.119220837
9999
49995000
0.120412829
9999
49995000


MergeSort:
0.142115957
19998
99990000
0.139686635
19998
99990000
0.138709054
19998
99990000
0.138759526
19998
99990000
0.139400096
19998
99990000
0.141800563
19998
99990000

Looks like Quicksort falls really short when everything is already sorted. Odd behaviour. 
It seems to be comparing each integer against every other integer.

3.)

Quicksort:

0.003839914
258
106062
0.002553671
570
299697
0.001151001
166
378303
0.001283207
208
470516
6.01304E-4

Mergesort:
5.4281E-5
2
6739
5.372E-5
2
7864
5.3781E-5
2
8988
5.3279E-5
2
10111
5.5423E-5
2
11235

Looks like quicksort consistently runs slower than mergesort here, making far more comparisons.



4.)
Quicksort:
7.58475E-4
0
2997000
7.42045E-4
0
3496500
7.60739E-4
0
3996000
7.2834E-4
0
4495500
7.70638E-4
0
4995000

Mergesort:
5.7137E-5
1
5994
5.5313E-5
1
6993
6.0533E-5
1
7992
5.5524E-5
1
8991
5.2157E-5
1
9990

Looks like Quicksort runs slower than mergesort here also but only by a little.
